service: campus-directions-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  ## Defines an HTTP API endpoint that calls the main function in create.js
  ## - path: url path is /notes
  ## - method: POST request
  ## - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  ##     domain api call
  ## - authorizer: authenticate using the AWS IAM role
  createQR:
    handler: create-qr.main
    events:
      - http:
          path: /qr
          method: post
          cors: true
          # authorizer: aws_iam
  getQR:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /qr/{id}
    # - method: GET request
    handler: get-qr.main
    events:
      - http:
          path: /qr/{id}
          method: get
          cors: true
          # authorizer: aws_iam
  listQR:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /qr
    # - method: GET request
    handler: list-qr.main
    events:
      - http:
          path: /qr
          method: get
          cors: true
          # authorizer: aws_iam
  createBuilding:
    handler: create-building.main
    events:
      - http:
         path: /building
         method: post
         cors: true
         # authorizer: aws_iam
  getBuilding:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /qr/{id}
    # - method: GET request
    handler: get-building.main
    events:
      - http:
          path: /building/{id}
          method: get
          cors: true
          # authorizer: aws_iam

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}